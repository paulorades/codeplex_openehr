//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5448
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.5448.
// 
#pragma warning disable 1591

namespace OpenEhr.EhrGate.WsClient.EhrService {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;

    using OpenEhr.RM.Common.Generic;
    using OpenEhr.RM.Composition;
    using OpenEhr.RM.Common.Directory;
    using OpenEhr.Constants;
    using OpenEhr.RM.Ehr;
    using OpenEhr.RM.Support.Identification;
    using OpenEhr.EhrGate.WsClient.ResultSet;
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="EhrServiceSoap", Namespace="http://oceanehr.com/EhrGate/EhrService/v1")]
    public partial class EhrServiceProxy : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AuthenticateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback OpenSessionOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginSessionOperationCompleted;
        
        private System.Threading.SendOrPostCallback CloseSessionOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsOpenSessionOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindEHRsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteEhrOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSubjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback CommitTemplateDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback CommitCompositionOperationCompleted;
        
        private System.Threading.SendOrPostCallback CommitContributionOperationCompleted;
        
        private System.Threading.SendOrPostCallback CompositionByObjectIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCompositionOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindCompositionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCompositionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryCompositionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback RunQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetResultsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReleaseResultsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDirectoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback CommitDirectoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEhrStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback CommitEhrStatusOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        //public EhrServiceProxy() {
        //    this.Url = global::OceanEhr.EhrGate.EhrGateWsClient.Properties.Settings.Default.OceanEhr_EhrGate_EhrGateWsClient_EhrService_EhrService;
        //    if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
        //        this.UseDefaultCredentials = true;
        //        this.useDefaultCredentialsSetExplicitly = false;
        //    }
        //    else {
        //        this.useDefaultCredentialsSetExplicitly = true;
        //    }
        //}
        
        public EhrServiceProxy(string url)
        {
            this.Url = url;
        }

        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        

        /// <remarks/>
        public event AuthenticateUserCompletedEventHandler AuthenticateUserCompleted;
        
        /// <remarks/>
        public event OpenSessionCompletedEventHandler OpenSessionCompleted;
        
        /// <remarks/>
        public event LoginSessionCompletedEventHandler LoginSessionCompleted;
        
        /// <remarks/>
        public event CloseSessionCompletedEventHandler CloseSessionCompleted;
        
        /// <remarks/>
        public event IsOpenSessionCompletedEventHandler IsOpenSessionCompleted;
        
        /// <remarks/>
        public event FindCompletedEventHandler FindCompleted;
        
        /// <remarks/>
        public event FindEHRsCompletedEventHandler FindEHRsCompleted;
        
        /// <remarks/>
        public event CreateCompletedEventHandler CreateCompleted;
        
        /// <remarks/>
        public event DeleteEhrCompletedEventHandler DeleteEhrCompleted;
        
        /// <remarks/>
        public event GetSubjectCompletedEventHandler GetSubjectCompleted;
        
        /// <remarks/>
        public event CommitTemplateDocumentCompletedEventHandler CommitTemplateDocumentCompleted;
        
        /// <remarks/>
        public event CommitCompositionCompletedEventHandler CommitCompositionCompleted;
        
        /// <remarks/>
        public event CommitContributionCompletedEventHandler CommitContributionCompleted;
        
        /// <remarks/>
        public event CompositionByObjectIdCompletedEventHandler CompositionByObjectIdCompleted;
        
        /// <remarks/>
        public event GetCompositionCompletedEventHandler GetCompositionCompleted;
        
        /// <remarks/>
        public event FindCompositionsCompletedEventHandler FindCompositionsCompleted;
        
        /// <remarks/>
        public event GetCompositionsCompletedEventHandler GetCompositionsCompleted;
        
        /// <remarks/>
        public event QueryCompositionsCompletedEventHandler QueryCompositionsCompleted;
        
        /// <remarks/>
        public event QueryCompletedEventHandler QueryCompleted;
        
        /// <remarks/>
        public event RunQueryCompletedEventHandler RunQueryCompleted;
        
        /// <remarks/>
        public event GetResultsCompletedEventHandler GetResultsCompleted;
        
        /// <remarks/>
        public event ReleaseResultsCompletedEventHandler ReleaseResultsCompleted;
        
        /// <remarks/>
        public event GetDirectoryCompletedEventHandler GetDirectoryCompleted;
        
        /// <remarks/>
        public event CommitDirectoryCompletedEventHandler CommitDirectoryCompleted;
        
        /// <remarks/>
        public event GetEhrStatusCompletedEventHandler GetEhrStatusCompleted;
        
        /// <remarks/>
        public event CommitEhrStatusCompletedEventHandler CommitEhrStatusCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://oceanehr.com/EhrGate/EhrService/v1/AuthenticateUser", RequestNamespace="http://oceanehr.com/EhrGate/EhrService/v1", ResponseNamespace="http://oceanehr.com/EhrGate/EhrService/v1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AuthenticateUser(string userId, string password) {
            object[] results = this.Invoke("AuthenticateUser", new object[] {
                        userId,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AuthenticateUserAsync(string userId, string password) {
            this.AuthenticateUserAsync(userId, password, null);
        }
        
        /// <remarks/>
        public void AuthenticateUserAsync(string userId, string password, object userState) {
            if ((this.AuthenticateUserOperationCompleted == null)) {
                this.AuthenticateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthenticateUserOperationCompleted);
            }
            this.InvokeAsync("AuthenticateUser", new object[] {
                        userId,
                        password}, this.AuthenticateUserOperationCompleted, userState);
        }
        
        private void OnAuthenticateUserOperationCompleted(object arg) {
            if ((this.AuthenticateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthenticateUserCompleted(this, new AuthenticateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://oceanehr.com/EhrGate/EhrService/v1/OpenSession", RequestNamespace="http://oceanehr.com/EhrGate/EhrService/v1", ResponseNamespace="http://oceanehr.com/EhrGate/EhrService/v1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string OpenSession(string userId, string authenticationToken) {
            object[] results = this.Invoke("OpenSession", new object[] {
                        userId,
                        authenticationToken});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void OpenSessionAsync(string userId, string authenticationToken) {
            this.OpenSessionAsync(userId, authenticationToken, null);
        }
        
        /// <remarks/>
        public void OpenSessionAsync(string userId, string authenticationToken, object userState) {
            if ((this.OpenSessionOperationCompleted == null)) {
                this.OpenSessionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOpenSessionOperationCompleted);
            }
            this.InvokeAsync("OpenSession", new object[] {
                        userId,
                        authenticationToken}, this.OpenSessionOperationCompleted, userState);
        }
        
        private void OnOpenSessionOperationCompleted(object arg) {
            if ((this.OpenSessionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OpenSessionCompleted(this, new OpenSessionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://oceanehr.com/EhrGate/EhrService/v1/LoginSession", RequestNamespace="http://oceanehr.com/EhrGate/EhrService/v1", ResponseNamespace="http://oceanehr.com/EhrGate/EhrService/v1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoginSession(string userId, string password) {
            object[] results = this.Invoke("LoginSession", new object[] {
                        userId,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoginSessionAsync(string userId, string password) {
            this.LoginSessionAsync(userId, password, null);
        }
        
        /// <remarks/>
        public void LoginSessionAsync(string userId, string password, object userState) {
            if ((this.LoginSessionOperationCompleted == null)) {
                this.LoginSessionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginSessionOperationCompleted);
            }
            this.InvokeAsync("LoginSession", new object[] {
                        userId,
                        password}, this.LoginSessionOperationCompleted, userState);
        }
        
        private void OnLoginSessionOperationCompleted(object arg) {
            if ((this.LoginSessionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginSessionCompleted(this, new LoginSessionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://oceanehr.com/EhrGate/EhrService/v1/CloseSession", RequestNamespace="http://oceanehr.com/EhrGate/EhrService/v1", ResponseNamespace="http://oceanehr.com/EhrGate/EhrService/v1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CloseSession(string sessionTicket) {
            this.Invoke("CloseSession", new object[] {
                        sessionTicket});
        }
        
        /// <remarks/>
        public void CloseSessionAsync(string sessionTicket) {
            this.CloseSessionAsync(sessionTicket, null);
        }
        
        /// <remarks/>
        public void CloseSessionAsync(string sessionTicket, object userState) {
            if ((this.CloseSessionOperationCompleted == null)) {
                this.CloseSessionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCloseSessionOperationCompleted);
            }
            this.InvokeAsync("CloseSession", new object[] {
                        sessionTicket}, this.CloseSessionOperationCompleted, userState);
        }
        
        private void OnCloseSessionOperationCompleted(object arg) {
            if ((this.CloseSessionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CloseSessionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://oceanehr.com/EhrGate/EhrService/v1/IsOpenSession", RequestNamespace="http://oceanehr.com/EhrGate/EhrService/v1", ResponseNamespace="http://oceanehr.com/EhrGate/EhrService/v1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsOpenSession(string sessionTicket) {
            object[] results = this.Invoke("IsOpenSession", new object[] {
                        sessionTicket});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsOpenSessionAsync(string sessionTicket) {
            this.IsOpenSessionAsync(sessionTicket, null);
        }
        
        /// <remarks/>
        public void IsOpenSessionAsync(string sessionTicket, object userState) {
            if ((this.IsOpenSessionOperationCompleted == null)) {
                this.IsOpenSessionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsOpenSessionOperationCompleted);
            }
            this.InvokeAsync("IsOpenSession", new object[] {
                        sessionTicket}, this.IsOpenSessionOperationCompleted, userState);
        }
        
        private void OnIsOpenSessionOperationCompleted(object arg) {
            if ((this.IsOpenSessionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsOpenSessionCompleted(this, new IsOpenSessionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://oceanehr.com/EhrGate/EhrService/v1/Find", RequestNamespace="http://oceanehr.com/EhrGate/EhrService/v1", ResponseNamespace="http://oceanehr.com/EhrGate/EhrService/v1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Find(string sessionTicket, PartyRef subjectRef) {
            object[] results = this.Invoke("Find", new object[] {
                        sessionTicket,
                        subjectRef});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FindAsync(string sessionTicket, PartyRef subjectRef) {
            this.FindAsync(sessionTicket, subjectRef, null);
        }
        
        /// <remarks/>
        public void FindAsync(string sessionTicket, PartyRef subjectRef, object userState) {
            if ((this.FindOperationCompleted == null)) {
                this.FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindOperationCompleted);
            }
            this.InvokeAsync("Find", new object[] {
                        sessionTicket,
                        subjectRef}, this.FindOperationCompleted, userState);
        }
        
        private void OnFindOperationCompleted(object arg) {
            if ((this.FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindCompleted(this, new FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://oceanehr.com/EhrGate/EhrService/v1/FindEHRs", RequestNamespace="http://oceanehr.com/EhrGate/EhrService/v1", ResponseNamespace="http://oceanehr.com/EhrGate/EhrService/v1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("ehrId")]
        public string[] FindEHRs(string sessionTicket, PartyRef subjectRef) {
            object[] results = this.Invoke("FindEHRs", new object[] {
                        sessionTicket,
                        subjectRef});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void FindEHRsAsync(string sessionTicket, PartyRef subjectRef) {
            this.FindEHRsAsync(sessionTicket, subjectRef, null);
        }
        
        /// <remarks/>
        public void FindEHRsAsync(string sessionTicket, PartyRef subjectRef, object userState) {
            if ((this.FindEHRsOperationCompleted == null)) {
                this.FindEHRsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindEHRsOperationCompleted);
            }
            this.InvokeAsync("FindEHRs", new object[] {
                        sessionTicket,
                        subjectRef}, this.FindEHRsOperationCompleted, userState);
        }
        
        private void OnFindEHRsOperationCompleted(object arg) {
            if ((this.FindEHRsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindEHRsCompleted(this, new FindEHRsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://oceanehr.com/EhrGate/EhrService/v1/Create", RequestNamespace="http://oceanehr.com/EhrGate/EhrService/v1", ResponseNamespace="http://oceanehr.com/EhrGate/EhrService/v1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Create(string sessionTicket, PartyIdentified committer, PartyRef subjectRef) {
            object[] results = this.Invoke("Create", new object[] {
                        sessionTicket,
                        committer,
                        subjectRef});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateAsync(string sessionTicket, PartyIdentified committer, PartyRef subjectRef) {
            this.CreateAsync(sessionTicket, committer, subjectRef, null);
        }
        
        /// <remarks/>
        public void CreateAsync(string sessionTicket, PartyIdentified committer, PartyRef subjectRef, object userState) {
            if ((this.CreateOperationCompleted == null)) {
                this.CreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOperationCompleted);
            }
            this.InvokeAsync("Create", new object[] {
                        sessionTicket,
                        committer,
                        subjectRef}, this.CreateOperationCompleted, userState);
        }
        
        private void OnCreateOperationCompleted(object arg) {
            if ((this.CreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateCompleted(this, new CreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://oceanehr.com/EhrGate/EhrService/v1/DeleteEhr", RequestNamespace="http://oceanehr.com/EhrGate/EhrService/v1", ResponseNamespace="http://oceanehr.com/EhrGate/EhrService/v1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteEhr(string sessionTicket, string ehrId, PartyIdentified committer) {
            this.Invoke("DeleteEhr", new object[] {
                        sessionTicket,
                        ehrId,
                        committer});
        }
        
        /// <remarks/>
        public void DeleteEhrAsync(string sessionTicket, string ehrId, PartyIdentified committer) {
            this.DeleteEhrAsync(sessionTicket, ehrId, committer, null);
        }
        
        /// <remarks/>
        public void DeleteEhrAsync(string sessionTicket, string ehrId, PartyIdentified committer, object userState) {
            if ((this.DeleteEhrOperationCompleted == null)) {
                this.DeleteEhrOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteEhrOperationCompleted);
            }
            this.InvokeAsync("DeleteEhr", new object[] {
                        sessionTicket,
                        ehrId,
                        committer}, this.DeleteEhrOperationCompleted, userState);
        }
        
        private void OnDeleteEhrOperationCompleted(object arg) {
            if ((this.DeleteEhrCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteEhrCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://oceanehr.com/EhrGate/EhrService/v1/GetSubject", RequestNamespace="http://oceanehr.com/EhrGate/EhrService/v1", ResponseNamespace="http://oceanehr.com/EhrGate/EhrService/v1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PartyRef GetSubject(string sessionTicket, string ehrId) {
            object[] results = this.Invoke("GetSubject", new object[] {
                        sessionTicket,
                        ehrId});
            return ((PartyRef)(results[0]));
        }
        
        /// <remarks/>
        public void GetSubjectAsync(string sessionTicket, string ehrId) {
            this.GetSubjectAsync(sessionTicket, ehrId, null);
        }
        
        /// <remarks/>
        public void GetSubjectAsync(string sessionTicket, string ehrId, object userState) {
            if ((this.GetSubjectOperationCompleted == null)) {
                this.GetSubjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSubjectOperationCompleted);
            }
            this.InvokeAsync("GetSubject", new object[] {
                        sessionTicket,
                        ehrId}, this.GetSubjectOperationCompleted, userState);
        }
        
        private void OnGetSubjectOperationCompleted(object arg) {
            if ((this.GetSubjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSubjectCompleted(this, new GetSubjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://oceanehr.com/EhrGate/EhrService/v1/CommitTemplateDocument", RequestNamespace="http://oceanehr.com/EhrGate/EhrService/v1", ResponseNamespace="http://oceanehr.com/EhrGate/EhrService/v1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CommitTemplateDocument(string sessionTicket, string ehrId, PartyIdentified committer, AuditChangeType changeType, VersionLifecycleState lifecycleState, string precedingVersionUid, System.Xml.XmlNode document) {
            object[] results = this.Invoke("CommitTemplateDocument", new object[] {
                        sessionTicket,
                        ehrId,
                        committer,
                        changeType,
                        lifecycleState,
                        precedingVersionUid,
                        document});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CommitTemplateDocumentAsync(string sessionTicket, string ehrId, PartyIdentified committer, AuditChangeType changeType, VersionLifecycleState lifecycleState, string precedingVersionUid, System.Xml.XmlNode document) {
            this.CommitTemplateDocumentAsync(sessionTicket, ehrId, committer, changeType, lifecycleState, precedingVersionUid, document, null);
        }
        
        /// <remarks/>
        public void CommitTemplateDocumentAsync(string sessionTicket, string ehrId, PartyIdentified committer, AuditChangeType changeType, VersionLifecycleState lifecycleState, string precedingVersionUid, System.Xml.XmlNode document, object userState) {
            if ((this.CommitTemplateDocumentOperationCompleted == null)) {
                this.CommitTemplateDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCommitTemplateDocumentOperationCompleted);
            }
            this.InvokeAsync("CommitTemplateDocument", new object[] {
                        sessionTicket,
                        ehrId,
                        committer,
                        changeType,
                        lifecycleState,
                        precedingVersionUid,
                        document}, this.CommitTemplateDocumentOperationCompleted, userState);
        }
        
        private void OnCommitTemplateDocumentOperationCompleted(object arg) {
            if ((this.CommitTemplateDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CommitTemplateDocumentCompleted(this, new CommitTemplateDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://oceanehr.com/EhrGate/EhrService/v1/CommitComposition", RequestNamespace="http://oceanehr.com/EhrGate/EhrService/v1", ResponseNamespace="http://oceanehr.com/EhrGate/EhrService/v1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CommitComposition(string sessionTicket, string ehrId, PartyIdentified committer, string comment, AuditChangeType changeType, VersionLifecycleState lifecycleState, string precedingVersionUid, Composition composition) {
            object[] results = this.Invoke("CommitComposition", new object[] {
                        sessionTicket,
                        ehrId,
                        committer,
                        comment,
                        changeType,
                        lifecycleState,
                        precedingVersionUid,
                        composition});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CommitCompositionAsync(string sessionTicket, string ehrId, PartyIdentified committer, string comment, AuditChangeType changeType, VersionLifecycleState lifecycleState, string precedingVersionUid, Composition composition) {
            this.CommitCompositionAsync(sessionTicket, ehrId, committer, comment, changeType, lifecycleState, precedingVersionUid, composition, null);
        }
        
        /// <remarks/>
        public void CommitCompositionAsync(string sessionTicket, string ehrId, PartyIdentified committer, string comment, AuditChangeType changeType, VersionLifecycleState lifecycleState, string precedingVersionUid, Composition composition, object userState) {
            if ((this.CommitCompositionOperationCompleted == null)) {
                this.CommitCompositionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCommitCompositionOperationCompleted);
            }
            this.InvokeAsync("CommitComposition", new object[] {
                        sessionTicket,
                        ehrId,
                        committer,
                        comment,
                        changeType,
                        lifecycleState,
                        precedingVersionUid,
                        composition}, this.CommitCompositionOperationCompleted, userState);
        }
        
        private void OnCommitCompositionOperationCompleted(object arg) {
            if ((this.CommitCompositionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CommitCompositionCompleted(this, new CommitCompositionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://oceanehr.com/EhrGate/EhrService/v1/CommitContribution", RequestNamespace="http://oceanehr.com/EhrGate/EhrService/v1", ResponseNamespace="http://oceanehr.com/EhrGate/EhrService/v1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("objectId")]
        public string[] CommitContribution(string sessionTicket, string ehrId, PartyIdentified committer, [System.Xml.Serialization.XmlElementAttribute("versions")] ContributionVersion[] versions) {
            object[] results = this.Invoke("CommitContribution", new object[] {
                        sessionTicket,
                        ehrId,
                        committer,
                        versions});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void CommitContributionAsync(string sessionTicket, string ehrId, PartyIdentified committer, ContributionVersion[] versions) {
            this.CommitContributionAsync(sessionTicket, ehrId, committer, versions, null);
        }
        
        /// <remarks/>
        public void CommitContributionAsync(string sessionTicket, string ehrId, PartyIdentified committer, ContributionVersion[] versions, object userState) {
            if ((this.CommitContributionOperationCompleted == null)) {
                this.CommitContributionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCommitContributionOperationCompleted);
            }
            this.InvokeAsync("CommitContribution", new object[] {
                        sessionTicket,
                        ehrId,
                        committer,
                        versions}, this.CommitContributionOperationCompleted, userState);
        }
        
        private void OnCommitContributionOperationCompleted(object arg) {
            if ((this.CommitContributionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CommitContributionCompleted(this, new CommitContributionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://oceanehr.com/EhrGate/EhrService/v1/CompositionByObjectId", RequestNamespace="http://oceanehr.com/EhrGate/EhrService/v1", ResponseNamespace="http://oceanehr.com/EhrGate/EhrService/v1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Composition CompositionByObjectId(string sessionTicket, string objectId, string versionTime) {
            object[] results = this.Invoke("CompositionByObjectId", new object[] {
                        sessionTicket,
                        objectId,
                        versionTime});
            return ((Composition)(results[0]));
        }
        
        /// <remarks/>
        public void CompositionByObjectIdAsync(string sessionTicket, string objectId, string versionTime) {
            this.CompositionByObjectIdAsync(sessionTicket, objectId, versionTime, null);
        }
        
        /// <remarks/>
        public void CompositionByObjectIdAsync(string sessionTicket, string objectId, string versionTime, object userState) {
            if ((this.CompositionByObjectIdOperationCompleted == null)) {
                this.CompositionByObjectIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCompositionByObjectIdOperationCompleted);
            }
            this.InvokeAsync("CompositionByObjectId", new object[] {
                        sessionTicket,
                        objectId,
                        versionTime}, this.CompositionByObjectIdOperationCompleted, userState);
        }
        
        private void OnCompositionByObjectIdOperationCompleted(object arg) {
            if ((this.CompositionByObjectIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CompositionByObjectIdCompleted(this, new CompositionByObjectIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://oceanehr.com/EhrGate/EhrService/v1/GetComposition", RequestNamespace="http://oceanehr.com/EhrGate/EhrService/v1", ResponseNamespace="http://oceanehr.com/EhrGate/EhrService/v1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Composition GetComposition(string sessionTicket, string uid) {
            object[] results = this.Invoke("GetComposition", new object[] {
                        sessionTicket,
                        uid});
            return ((Composition)(results[0]));
        }
        
        /// <remarks/>
        public void GetCompositionAsync(string sessionTicket, string uid) {
            this.GetCompositionAsync(sessionTicket, uid, null);
        }
        
        /// <remarks/>
        public void GetCompositionAsync(string sessionTicket, string uid, object userState) {
            if ((this.GetCompositionOperationCompleted == null)) {
                this.GetCompositionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCompositionOperationCompleted);
            }
            this.InvokeAsync("GetComposition", new object[] {
                        sessionTicket,
                        uid}, this.GetCompositionOperationCompleted, userState);
        }
        
        private void OnGetCompositionOperationCompleted(object arg) {
            if ((this.GetCompositionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCompositionCompleted(this, new GetCompositionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://oceanehr.com/EhrGate/EhrService/v1/FindCompositions", RequestNamespace="http://oceanehr.com/EhrGate/EhrService/v1", ResponseNamespace="http://oceanehr.com/EhrGate/EhrService/v1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResultsTable FindCompositions(string sessionTicket, string ehrId, [System.Xml.Serialization.XmlElementAttribute("selectPaths")] string[] selectPaths, string compositionArchetype, [System.Xml.Serialization.XmlElementAttribute("compositionCriteria")] string[] compositionCriteria)
        {
            object[] results = this.Invoke("FindCompositions", new object[] {
                        sessionTicket,
                        ehrId,
                        selectPaths,
                        compositionArchetype,
                        compositionCriteria});
            return ((ResultsTable)(results[0]));
        }
        
        /// <remarks/>
        public void FindCompositionsAsync(string sessionTicket, string ehrId, string[] selectPaths, string compositionArchetype, string[] compositionCriteria) {
            this.FindCompositionsAsync(sessionTicket, ehrId, selectPaths, compositionArchetype, compositionCriteria, null);
        }
        
        /// <remarks/>
        public void FindCompositionsAsync(string sessionTicket, string ehrId, string[] selectPaths, string compositionArchetype, string[] compositionCriteria, object userState) {
            if ((this.FindCompositionsOperationCompleted == null)) {
                this.FindCompositionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindCompositionsOperationCompleted);
            }
            this.InvokeAsync("FindCompositions", new object[] {
                        sessionTicket,
                        ehrId,
                        selectPaths,
                        compositionArchetype,
                        compositionCriteria}, this.FindCompositionsOperationCompleted, userState);
        }
        
        private void OnFindCompositionsOperationCompleted(object arg) {
            if ((this.FindCompositionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindCompositionsCompleted(this, new FindCompositionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://oceanehr.com/EhrGate/EhrService/v1/GetCompositions", RequestNamespace="http://oceanehr.com/EhrGate/EhrService/v1", ResponseNamespace="http://oceanehr.com/EhrGate/EhrService/v1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("composition")]
        public Composition[] GetCompositions(string sessionTicket, string ehrId, string compositionArchetype, [System.Xml.Serialization.XmlElementAttribute("compositionCriteria")] string[] compositionCriteria) {
            object[] results = this.Invoke("GetCompositions", new object[] {
                        sessionTicket,
                        ehrId,
                        compositionArchetype,
                        compositionCriteria});
            return ((Composition[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCompositionsAsync(string sessionTicket, string ehrId, string compositionArchetype, string[] compositionCriteria) {
            this.GetCompositionsAsync(sessionTicket, ehrId, compositionArchetype, compositionCriteria, null);
        }
        
        /// <remarks/>
        public void GetCompositionsAsync(string sessionTicket, string ehrId, string compositionArchetype, string[] compositionCriteria, object userState) {
            if ((this.GetCompositionsOperationCompleted == null)) {
                this.GetCompositionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCompositionsOperationCompleted);
            }
            this.InvokeAsync("GetCompositions", new object[] {
                        sessionTicket,
                        ehrId,
                        compositionArchetype,
                        compositionCriteria}, this.GetCompositionsOperationCompleted, userState);
        }
        
        private void OnGetCompositionsOperationCompleted(object arg) {
            if ((this.GetCompositionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCompositionsCompleted(this, new GetCompositionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://oceanehr.com/EhrGate/EhrService/v1/QueryCompositions", RequestNamespace="http://oceanehr.com/EhrGate/EhrService/v1", ResponseNamespace="http://oceanehr.com/EhrGate/EhrService/v1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("composition")]
        public Composition[] QueryCompositions(string sessionTicket, string queryStatement) {
            object[] results = this.Invoke("QueryCompositions", new object[] {
                        sessionTicket,
                        queryStatement});
            return ((Composition[])(results[0]));
        }
        
        /// <remarks/>
        public void QueryCompositionsAsync(string sessionTicket, string queryStatement) {
            this.QueryCompositionsAsync(sessionTicket, queryStatement, null);
        }
        
        /// <remarks/>
        public void QueryCompositionsAsync(string sessionTicket, string queryStatement, object userState) {
            if ((this.QueryCompositionsOperationCompleted == null)) {
                this.QueryCompositionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryCompositionsOperationCompleted);
            }
            this.InvokeAsync("QueryCompositions", new object[] {
                        sessionTicket,
                        queryStatement}, this.QueryCompositionsOperationCompleted, userState);
        }
        
        private void OnQueryCompositionsOperationCompleted(object arg) {
            if ((this.QueryCompositionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryCompositionsCompleted(this, new QueryCompositionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://oceanehr.com/EhrGate/EhrService/v1/Query", RequestNamespace="http://oceanehr.com/EhrGate/EhrService/v1", ResponseNamespace="http://oceanehr.com/EhrGate/EhrService/v1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResultsTable Query(string sessionTicket, string queryStatement) {
            object[] results = this.Invoke("Query", new object[] {
                        sessionTicket,
                        queryStatement});
            return ((ResultsTable)(results[0]));
        }
        
        /// <remarks/>
        public void QueryAsync(string sessionTicket, string queryStatement) {
            this.QueryAsync(sessionTicket, queryStatement, null);
        }
        
        /// <remarks/>
        public void QueryAsync(string sessionTicket, string queryStatement, object userState) {
            if ((this.QueryOperationCompleted == null)) {
                this.QueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryOperationCompleted);
            }
            this.InvokeAsync("Query", new object[] {
                        sessionTicket,
                        queryStatement}, this.QueryOperationCompleted, userState);
        }
        
        private void OnQueryOperationCompleted(object arg) {
            if ((this.QueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryCompleted(this, new QueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://oceanehr.com/EhrGate/EhrService/v1/RunQuery", RequestNamespace="http://oceanehr.com/EhrGate/EhrService/v1", ResponseNamespace="http://oceanehr.com/EhrGate/EhrService/v1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RunQuery(string sessionTicket, string queryStatement) {
            object[] results = this.Invoke("RunQuery", new object[] {
                        sessionTicket,
                        queryStatement});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RunQueryAsync(string sessionTicket, string queryStatement) {
            this.RunQueryAsync(sessionTicket, queryStatement, null);
        }
        
        /// <remarks/>
        public void RunQueryAsync(string sessionTicket, string queryStatement, object userState) {
            if ((this.RunQueryOperationCompleted == null)) {
                this.RunQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRunQueryOperationCompleted);
            }
            this.InvokeAsync("RunQuery", new object[] {
                        sessionTicket,
                        queryStatement}, this.RunQueryOperationCompleted, userState);
        }
        
        private void OnRunQueryOperationCompleted(object arg) {
            if ((this.RunQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RunQueryCompleted(this, new RunQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://oceanehr.com/EhrGate/EhrService/v1/GetResults", RequestNamespace="http://oceanehr.com/EhrGate/EhrService/v1", ResponseNamespace="http://oceanehr.com/EhrGate/EhrService/v1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResultsTable GetResults(string sessionTicket, string queryId, int maxResults) {
            object[] results = this.Invoke("GetResults", new object[] {
                        sessionTicket,
                        queryId,
                        maxResults});
            return ((ResultsTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetResultsAsync(string sessionTicket, string queryId, int maxResults) {
            this.GetResultsAsync(sessionTicket, queryId, maxResults, null);
        }
        
        /// <remarks/>
        public void GetResultsAsync(string sessionTicket, string queryId, int maxResults, object userState) {
            if ((this.GetResultsOperationCompleted == null)) {
                this.GetResultsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResultsOperationCompleted);
            }
            this.InvokeAsync("GetResults", new object[] {
                        sessionTicket,
                        queryId,
                        maxResults}, this.GetResultsOperationCompleted, userState);
        }
        
        private void OnGetResultsOperationCompleted(object arg) {
            if ((this.GetResultsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetResultsCompleted(this, new GetResultsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://oceanehr.com/EhrGate/EhrService/v1/ReleaseResults", RequestNamespace="http://oceanehr.com/EhrGate/EhrService/v1", ResponseNamespace="http://oceanehr.com/EhrGate/EhrService/v1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ReleaseResults(string sessionTicket, string queryId) {
            this.Invoke("ReleaseResults", new object[] {
                        sessionTicket,
                        queryId});
        }
        
        /// <remarks/>
        public void ReleaseResultsAsync(string sessionTicket, string queryId) {
            this.ReleaseResultsAsync(sessionTicket, queryId, null);
        }
        
        /// <remarks/>
        public void ReleaseResultsAsync(string sessionTicket, string queryId, object userState) {
            if ((this.ReleaseResultsOperationCompleted == null)) {
                this.ReleaseResultsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReleaseResultsOperationCompleted);
            }
            this.InvokeAsync("ReleaseResults", new object[] {
                        sessionTicket,
                        queryId}, this.ReleaseResultsOperationCompleted, userState);
        }
        
        private void OnReleaseResultsOperationCompleted(object arg) {
            if ((this.ReleaseResultsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReleaseResultsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://oceanehr.com/EhrGate/EhrService/v1/GetDirectory", RequestNamespace="http://oceanehr.com/EhrGate/EhrService/v1", ResponseNamespace="http://oceanehr.com/EhrGate/EhrService/v1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Folder GetDirectory(string sessionTicket, string ehrId) {
            object[] results = this.Invoke("GetDirectory", new object[] {
                        sessionTicket,
                        ehrId});
            return ((Folder)(results[0]));
        }
        
        /// <remarks/>
        public void GetDirectoryAsync(string sessionTicket, string ehrId) {
            this.GetDirectoryAsync(sessionTicket, ehrId, null);
        }
        
        /// <remarks/>
        public void GetDirectoryAsync(string sessionTicket, string ehrId, object userState) {
            if ((this.GetDirectoryOperationCompleted == null)) {
                this.GetDirectoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDirectoryOperationCompleted);
            }
            this.InvokeAsync("GetDirectory", new object[] {
                        sessionTicket,
                        ehrId}, this.GetDirectoryOperationCompleted, userState);
        }
        
        private void OnGetDirectoryOperationCompleted(object arg) {
            if ((this.GetDirectoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDirectoryCompleted(this, new GetDirectoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://oceanehr.com/EhrGate/EhrService/v1/CommitDirectory", RequestNamespace="http://oceanehr.com/EhrGate/EhrService/v1", ResponseNamespace="http://oceanehr.com/EhrGate/EhrService/v1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CommitDirectory(string sessionTicket, string ehrId, PartyIdentified committer, AuditChangeType changeType, string precedingVersionUid, Folder directory) {
            this.Invoke("CommitDirectory", new object[] {
                        sessionTicket,
                        ehrId,
                        committer,
                        changeType,
                        precedingVersionUid,
                        directory});
        }
        
        /// <remarks/>
        public void CommitDirectoryAsync(string sessionTicket, string ehrId, PartyIdentified committer, AuditChangeType changeType, string precedingVersionUid, Folder directory) {
            this.CommitDirectoryAsync(sessionTicket, ehrId, committer, changeType, precedingVersionUid, directory, null);
        }
        
        /// <remarks/>
        public void CommitDirectoryAsync(string sessionTicket, string ehrId, PartyIdentified committer, AuditChangeType changeType, string precedingVersionUid, Folder directory, object userState) {
            if ((this.CommitDirectoryOperationCompleted == null)) {
                this.CommitDirectoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCommitDirectoryOperationCompleted);
            }
            this.InvokeAsync("CommitDirectory", new object[] {
                        sessionTicket,
                        ehrId,
                        committer,
                        changeType,
                        precedingVersionUid,
                        directory}, this.CommitDirectoryOperationCompleted, userState);
        }
        
        private void OnCommitDirectoryOperationCompleted(object arg) {
            if ((this.CommitDirectoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CommitDirectoryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://oceanehr.com/EhrGate/EhrService/v1/GetEhrStatus", RequestNamespace="http://oceanehr.com/EhrGate/EhrService/v1", ResponseNamespace="http://oceanehr.com/EhrGate/EhrService/v1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EhrStatus GetEhrStatus(string sessionTicket, string ehrId) {
            object[] results = this.Invoke("GetEhrStatus", new object[] {
                        sessionTicket,
                        ehrId});
            return ((EhrStatus)(results[0]));
        }
        
        /// <remarks/>
        public void GetEhrStatusAsync(string sessionTicket, string ehrId) {
            this.GetEhrStatusAsync(sessionTicket, ehrId, null);
        }
        
        /// <remarks/>
        public void GetEhrStatusAsync(string sessionTicket, string ehrId, object userState) {
            if ((this.GetEhrStatusOperationCompleted == null)) {
                this.GetEhrStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEhrStatusOperationCompleted);
            }
            this.InvokeAsync("GetEhrStatus", new object[] {
                        sessionTicket,
                        ehrId}, this.GetEhrStatusOperationCompleted, userState);
        }
        
        private void OnGetEhrStatusOperationCompleted(object arg) {
            if ((this.GetEhrStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEhrStatusCompleted(this, new GetEhrStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://oceanehr.com/EhrGate/EhrService/v1/CommitEhrStatus", RequestNamespace="http://oceanehr.com/EhrGate/EhrService/v1", ResponseNamespace="http://oceanehr.com/EhrGate/EhrService/v1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CommitEhrStatus(string sessionTicket, string ehrId, PartyIdentified committer, AuditChangeType changeType, EhrStatus ehrStatus) {
            this.Invoke("CommitEhrStatus", new object[] {
                        sessionTicket,
                        ehrId,
                        committer,
                        changeType,
                        ehrStatus});
        }
        
        /// <remarks/>
        public void CommitEhrStatusAsync(string sessionTicket, string ehrId, PartyIdentified committer, AuditChangeType changeType, EhrStatus ehrStatus) {
            this.CommitEhrStatusAsync(sessionTicket, ehrId, committer, changeType, ehrStatus, null);
        }
        
        /// <remarks/>
        public void CommitEhrStatusAsync(string sessionTicket, string ehrId, PartyIdentified committer, AuditChangeType changeType, EhrStatus ehrStatus, object userState) {
            if ((this.CommitEhrStatusOperationCompleted == null)) {
                this.CommitEhrStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCommitEhrStatusOperationCompleted);
            }
            this.InvokeAsync("CommitEhrStatus", new object[] {
                        sessionTicket,
                        ehrId,
                        committer,
                        changeType,
                        ehrStatus}, this.CommitEhrStatusOperationCompleted, userState);
        }
        
        private void OnCommitEhrStatusOperationCompleted(object arg) {
            if ((this.CommitEhrStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CommitEhrStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class PARTY_REF : OBJECT_REF {
    //}
    
    ///// <remarks/>
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(LOCATABLE_REF))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(ACCESS_GROUP_REF))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(PARTY_REF))]
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class OBJECT_REF {
        
    //    private OBJECT_ID idField;
        
    //    private string namespaceField;
        
    //    private string typeField;
        
    //    /// <remarks/>
    //    public OBJECT_ID id {
    //        get {
    //            return this.idField;
    //        }
    //        set {
    //            this.idField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    [System.Xml.Serialization.XmlElementAttribute(DataType="token")]
    //    public string @namespace {
    //        get {
    //            return this.namespaceField;
    //        }
    //        set {
    //            this.namespaceField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    [System.Xml.Serialization.XmlElementAttribute(DataType="token")]
    //    public string type {
    //        get {
    //            return this.typeField;
    //        }
    //        set {
    //            this.typeField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(GENERIC_ID))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(TERMINOLOGY_ID))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(TEMPLATE_ID))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(ARCHETYPE_ID))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(UID_BASED_ID))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(HIER_OBJECT_ID))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(OBJECT_VERSION_ID))]
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public abstract partial class OBJECT_ID {
        
    //    private string valueField;
        
    //    /// <remarks/>
    //    [System.Xml.Serialization.XmlElementAttribute(DataType="token")]
    //    public string value {
    //        get {
    //            return this.valueField;
    //        }
    //        set {
    //            this.valueField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(IntervalOfDuration))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(IntervalOfTime))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(IntervalOfDateTime))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(IntervalOfDate))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(IntervalOfReal))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(IntervalOfInteger))]
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public abstract partial class Interval {
        
    //    private bool lower_includedField;
        
    //    private bool lower_includedFieldSpecified;
        
    //    private bool upper_includedField;
        
    //    private bool upper_includedFieldSpecified;
        
    //    private bool lower_unboundedField;
        
    //    private bool upper_unboundedField;
        
    //    /// <remarks/>
    //    public bool lower_included {
    //        get {
    //            return this.lower_includedField;
    //        }
    //        set {
    //            this.lower_includedField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    [System.Xml.Serialization.XmlIgnoreAttribute()]
    //    public bool lower_includedSpecified {
    //        get {
    //            return this.lower_includedFieldSpecified;
    //        }
    //        set {
    //            this.lower_includedFieldSpecified = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public bool upper_included {
    //        get {
    //            return this.upper_includedField;
    //        }
    //        set {
    //            this.upper_includedField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    [System.Xml.Serialization.XmlIgnoreAttribute()]
    //    public bool upper_includedSpecified {
    //        get {
    //            return this.upper_includedFieldSpecified;
    //        }
    //        set {
    //            this.upper_includedFieldSpecified = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public bool lower_unbounded {
    //        get {
    //            return this.lower_unboundedField;
    //        }
    //        set {
    //            this.lower_unboundedField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public bool upper_unbounded {
    //        get {
    //            return this.upper_unboundedField;
    //        }
    //        set {
    //            this.upper_unboundedField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class IntervalOfDuration : Interval {
        
    //    private string lowerField;
        
    //    private string upperField;
        
    //    /// <remarks/>
    //    public string lower {
    //        get {
    //            return this.lowerField;
    //        }
    //        set {
    //            this.lowerField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public string upper {
    //        get {
    //            return this.upperField;
    //        }
    //        set {
    //            this.upperField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class IntervalOfTime : Interval {
        
    //    private string lowerField;
        
    //    private string upperField;
        
    //    /// <remarks/>
    //    public string lower {
    //        get {
    //            return this.lowerField;
    //        }
    //        set {
    //            this.lowerField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public string upper {
    //        get {
    //            return this.upperField;
    //        }
    //        set {
    //            this.upperField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class IntervalOfDateTime : Interval {
        
    //    private string lowerField;
        
    //    private string upperField;
        
    //    /// <remarks/>
    //    public string lower {
    //        get {
    //            return this.lowerField;
    //        }
    //        set {
    //            this.lowerField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public string upper {
    //        get {
    //            return this.upperField;
    //        }
    //        set {
    //            this.upperField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class IntervalOfDate : Interval {
        
    //    private string lowerField;
        
    //    private string upperField;
        
    //    /// <remarks/>
    //    public string lower {
    //        get {
    //            return this.lowerField;
    //        }
    //        set {
    //            this.lowerField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public string upper {
    //        get {
    //            return this.upperField;
    //        }
    //        set {
    //            this.upperField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class IntervalOfReal : Interval {
        
    //    private float lowerField;
        
    //    private bool lowerFieldSpecified;
        
    //    private float upperField;
        
    //    private bool upperFieldSpecified;
        
    //    /// <remarks/>
    //    public float lower {
    //        get {
    //            return this.lowerField;
    //        }
    //        set {
    //            this.lowerField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    [System.Xml.Serialization.XmlIgnoreAttribute()]
    //    public bool lowerSpecified {
    //        get {
    //            return this.lowerFieldSpecified;
    //        }
    //        set {
    //            this.lowerFieldSpecified = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public float upper {
    //        get {
    //            return this.upperField;
    //        }
    //        set {
    //            this.upperField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    [System.Xml.Serialization.XmlIgnoreAttribute()]
    //    public bool upperSpecified {
    //        get {
    //            return this.upperFieldSpecified;
    //        }
    //        set {
    //            this.upperFieldSpecified = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class IntervalOfInteger : Interval {
        
    //    private int lowerField;
        
    //    private bool lowerFieldSpecified;
        
    //    private int upperField;
        
    //    private bool upperFieldSpecified;
        
    //    /// <remarks/>
    //    public int lower {
    //        get {
    //            return this.lowerField;
    //        }
    //        set {
    //            this.lowerField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    [System.Xml.Serialization.XmlIgnoreAttribute()]
    //    public bool lowerSpecified {
    //        get {
    //            return this.lowerFieldSpecified;
    //        }
    //        set {
    //            this.lowerFieldSpecified = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public int upper {
    //        get {
    //            return this.upperField;
    //        }
    //        set {
    //            this.upperField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    [System.Xml.Serialization.XmlIgnoreAttribute()]
    //    public bool upperSpecified {
    //        get {
    //            return this.upperFieldSpecified;
    //        }
    //        set {
    //            this.upperFieldSpecified = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(ATTESTATION))]
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class AUDIT_DETAILS {
        
    //    private string system_idField;
        
    //    private PARTY_PROXY committerField;
        
    //    private DV_DATE_TIME time_committedField;
        
    //    private DV_CODED_TEXT change_typeField;
        
    //    private DV_TEXT descriptionField;
        
    //    /// <remarks/>
    //    public string system_id {
    //        get {
    //            return this.system_idField;
    //        }
    //        set {
    //            this.system_idField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public PARTY_PROXY committer {
    //        get {
    //            return this.committerField;
    //        }
    //        set {
    //            this.committerField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public DV_DATE_TIME time_committed {
    //        get {
    //            return this.time_committedField;
    //        }
    //        set {
    //            this.time_committedField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public DV_CODED_TEXT change_type {
    //        get {
    //            return this.change_typeField;
    //        }
    //        set {
    //            this.change_typeField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public DV_TEXT description {
    //        get {
    //            return this.descriptionField;
    //        }
    //        set {
    //            this.descriptionField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(PARTY_SELF))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(PARTY_IDENTIFIED))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(PARTY_RELATED))]
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public abstract partial class PARTY_PROXY {
        
    //    private PARTY_REF external_refField;
        
    //    /// <remarks/>
    //    public PARTY_REF external_ref {
    //        get {
    //            return this.external_refField;
    //        }
    //        set {
    //            this.external_refField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class PARTY_SELF : PARTY_PROXY {
    //}
    
    ///// <remarks/>
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(PARTY_RELATED))]
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class PARTY_IDENTIFIED : PARTY_PROXY {
        
    //    private string nameField;
        
    //    private DV_IDENTIFIER[] identifiersField;
        
    //    /// <remarks/>
    //    public string name {
    //        get {
    //            return this.nameField;
    //        }
    //        set {
    //            this.nameField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    [System.Xml.Serialization.XmlElementAttribute("identifiers")]
    //    public DV_IDENTIFIER[] identifiers {
    //        get {
    //            return this.identifiersField;
    //        }
    //        set {
    //            this.identifiersField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class DV_IDENTIFIER : DATA_VALUE {
        
    //    private string issuerField;
        
    //    private string assignerField;
        
    //    private string idField;
        
    //    private string typeField;
        
    //    /// <remarks/>
    //    public string issuer {
    //        get {
    //            return this.issuerField;
    //        }
    //        set {
    //            this.issuerField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public string assigner {
    //        get {
    //            return this.assignerField;
    //        }
    //        set {
    //            this.assignerField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public string id {
    //        get {
    //            return this.idField;
    //        }
    //        set {
    //            this.idField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public string type {
    //        get {
    //            return this.typeField;
    //        }
    //        set {
    //            this.typeField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(DV_ENCAPSULATED))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(DV_PARSABLE))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(DV_MULTIMEDIA))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(DV_TIME_SPECIFICATION))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(DV_GENERAL_TIME_SPECIFICATION))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(DV_PERIODIC_TIME_SPECIFICATION))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(DV_PARAGRAPH))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(DV_INTERVAL))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(DV_ORDERED))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(DV_ORDINAL))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(DV_QUANTIFIED))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(DV_TEMPORAL))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(DV_DATE))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(DV_TIME))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(DV_DATE_TIME))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(DV_AMOUNT))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(DV_DURATION))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(DV_PROPORTION))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(DV_QUANTITY))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(DV_COUNT))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(DV_URI))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(DV_EHR_URI))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(DV_TEXT))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(DV_CODED_TEXT))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(DV_STATE))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(DV_IDENTIFIER))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(DV_BOOLEAN))]
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public abstract partial class DATA_VALUE {
    //}
    
    ///// <remarks/>
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(DV_PARSABLE))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(DV_MULTIMEDIA))]
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public abstract partial class DV_ENCAPSULATED : DATA_VALUE {
        
    //    private CODE_PHRASE charsetField;
        
    //    private CODE_PHRASE languageField;
        
    //    /// <remarks/>
    //    public CODE_PHRASE charset {
    //        get {
    //            return this.charsetField;
    //        }
    //        set {
    //            this.charsetField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public CODE_PHRASE language {
    //        get {
    //            return this.languageField;
    //        }
    //        set {
    //            this.languageField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class CODE_PHRASE {
        
    //    private TERMINOLOGY_ID terminology_idField;
        
    //    private string code_stringField;
        
    //    /// <remarks/>
    //    public TERMINOLOGY_ID terminology_id {
    //        get {
    //            return this.terminology_idField;
    //        }
    //        set {
    //            this.terminology_idField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public string code_string {
    //        get {
    //            return this.code_stringField;
    //        }
    //        set {
    //            this.code_stringField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class TERMINOLOGY_ID : OBJECT_ID {
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class DV_PARSABLE : DV_ENCAPSULATED {
        
    //    private string valueField;
        
    //    private string formalismField;
        
    //    /// <remarks/>
    //    public string value {
    //        get {
    //            return this.valueField;
    //        }
    //        set {
    //            this.valueField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public string formalism {
    //        get {
    //            return this.formalismField;
    //        }
    //        set {
    //            this.formalismField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class DV_MULTIMEDIA : DV_ENCAPSULATED {
        
    //    private string alternate_textField;
        
    //    private DV_URI uriField;
        
    //    private byte[] dataField;
        
    //    private CODE_PHRASE media_typeField;
        
    //    private CODE_PHRASE compression_algorithmField;
        
    //    private byte[] integrity_checkField;
        
    //    private CODE_PHRASE integrity_check_algorithmField;
        
    //    private int sizeField;
        
    //    private DV_MULTIMEDIA thumbnailField;
        
    //    /// <remarks/>
    //    public string alternate_text {
    //        get {
    //            return this.alternate_textField;
    //        }
    //        set {
    //            this.alternate_textField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public DV_URI uri {
    //        get {
    //            return this.uriField;
    //        }
    //        set {
    //            this.uriField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
    //    public byte[] data {
    //        get {
    //            return this.dataField;
    //        }
    //        set {
    //            this.dataField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public CODE_PHRASE media_type {
    //        get {
    //            return this.media_typeField;
    //        }
    //        set {
    //            this.media_typeField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public CODE_PHRASE compression_algorithm {
    //        get {
    //            return this.compression_algorithmField;
    //        }
    //        set {
    //            this.compression_algorithmField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
    //    public byte[] integrity_check {
    //        get {
    //            return this.integrity_checkField;
    //        }
    //        set {
    //            this.integrity_checkField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public CODE_PHRASE integrity_check_algorithm {
    //        get {
    //            return this.integrity_check_algorithmField;
    //        }
    //        set {
    //            this.integrity_check_algorithmField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public int size {
    //        get {
    //            return this.sizeField;
    //        }
    //        set {
    //            this.sizeField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public DV_MULTIMEDIA thumbnail {
    //        get {
    //            return this.thumbnailField;
    //        }
    //        set {
    //            this.thumbnailField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(DV_EHR_URI))]
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class DV_URI : DATA_VALUE {
        
    //    private string valueField;
        
    //    /// <remarks/>
    //    [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI")]
    //    public string value {
    //        get {
    //            return this.valueField;
    //        }
    //        set {
    //            this.valueField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class DV_EHR_URI : DV_URI {
    //}
    
    ///// <remarks/>
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(DV_GENERAL_TIME_SPECIFICATION))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(DV_PERIODIC_TIME_SPECIFICATION))]
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public abstract partial class DV_TIME_SPECIFICATION : DATA_VALUE {
        
    //    private DV_PARSABLE valueField;
        
    //    /// <remarks/>
    //    public DV_PARSABLE value {
    //        get {
    //            return this.valueField;
    //        }
    //        set {
    //            this.valueField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class DV_GENERAL_TIME_SPECIFICATION : DV_TIME_SPECIFICATION {
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class DV_PERIODIC_TIME_SPECIFICATION : DV_TIME_SPECIFICATION {
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class DV_PARAGRAPH : DATA_VALUE {
        
    //    private DV_TEXT[] itemsField;
        
    //    /// <remarks/>
    //    [System.Xml.Serialization.XmlElementAttribute("items")]
    //    public DV_TEXT[] items {
    //        get {
    //            return this.itemsField;
    //        }
    //        set {
    //            this.itemsField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(DV_CODED_TEXT))]
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class DV_TEXT : DATA_VALUE {
        
    //    private string valueField;
        
    //    private DV_URI hyperlinkField;
        
    //    private string formattingField;
        
    //    private TERM_MAPPING[] mappingsField;
        
    //    private CODE_PHRASE languageField;
        
    //    private CODE_PHRASE encodingField;
        
    //    /// <remarks/>
    //    public string value {
    //        get {
    //            return this.valueField;
    //        }
    //        set {
    //            this.valueField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public DV_URI hyperlink {
    //        get {
    //            return this.hyperlinkField;
    //        }
    //        set {
    //            this.hyperlinkField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public string formatting {
    //        get {
    //            return this.formattingField;
    //        }
    //        set {
    //            this.formattingField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    [System.Xml.Serialization.XmlElementAttribute("mappings")]
    //    public TERM_MAPPING[] mappings {
    //        get {
    //            return this.mappingsField;
    //        }
    //        set {
    //            this.mappingsField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public CODE_PHRASE language {
    //        get {
    //            return this.languageField;
    //        }
    //        set {
    //            this.languageField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public CODE_PHRASE encoding {
    //        get {
    //            return this.encodingField;
    //        }
    //        set {
    //            this.encodingField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class TERM_MAPPING {
        
    //    private string matchField;
        
    //    private DV_CODED_TEXT purposeField;
        
    //    private CODE_PHRASE targetField;
        
    //    public TERM_MAPPING() {
    //        this.matchField = "?";
    //    }
        
    //    /// <remarks/>
    //    public string match {
    //        get {
    //            return this.matchField;
    //        }
    //        set {
    //            this.matchField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public DV_CODED_TEXT purpose {
    //        get {
    //            return this.purposeField;
    //        }
    //        set {
    //            this.purposeField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public CODE_PHRASE target {
    //        get {
    //            return this.targetField;
    //        }
    //        set {
    //            this.targetField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class DV_CODED_TEXT : DV_TEXT {
        
    //    private CODE_PHRASE defining_codeField;
        
    //    /// <remarks/>
    //    public CODE_PHRASE defining_code {
    //        get {
    //            return this.defining_codeField;
    //        }
    //        set {
    //            this.defining_codeField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class DV_INTERVAL : DATA_VALUE {
        
    //    private DV_ORDERED lowerField;
        
    //    private DV_ORDERED upperField;
        
    //    private bool lower_includedField;
        
    //    private bool lower_includedFieldSpecified;
        
    //    private bool upper_includedField;
        
    //    private bool upper_includedFieldSpecified;
        
    //    private bool lower_unboundedField;
        
    //    private bool upper_unboundedField;
        
    //    /// <remarks/>
    //    public DV_ORDERED lower {
    //        get {
    //            return this.lowerField;
    //        }
    //        set {
    //            this.lowerField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public DV_ORDERED upper {
    //        get {
    //            return this.upperField;
    //        }
    //        set {
    //            this.upperField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public bool lower_included {
    //        get {
    //            return this.lower_includedField;
    //        }
    //        set {
    //            this.lower_includedField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    [System.Xml.Serialization.XmlIgnoreAttribute()]
    //    public bool lower_includedSpecified {
    //        get {
    //            return this.lower_includedFieldSpecified;
    //        }
    //        set {
    //            this.lower_includedFieldSpecified = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public bool upper_included {
    //        get {
    //            return this.upper_includedField;
    //        }
    //        set {
    //            this.upper_includedField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    [System.Xml.Serialization.XmlIgnoreAttribute()]
    //    public bool upper_includedSpecified {
    //        get {
    //            return this.upper_includedFieldSpecified;
    //        }
    //        set {
    //            this.upper_includedFieldSpecified = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public bool lower_unbounded {
    //        get {
    //            return this.lower_unboundedField;
    //        }
    //        set {
    //            this.lower_unboundedField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public bool upper_unbounded {
    //        get {
    //            return this.upper_unboundedField;
    //        }
    //        set {
    //            this.upper_unboundedField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(DV_ORDINAL))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(DV_QUANTIFIED))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(DV_TEMPORAL))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(DV_DATE))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(DV_TIME))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(DV_DATE_TIME))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(DV_AMOUNT))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(DV_DURATION))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(DV_PROPORTION))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(DV_QUANTITY))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(DV_COUNT))]
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public abstract partial class DV_ORDERED : DATA_VALUE {
        
    //    private DV_INTERVAL normal_rangeField;
        
    //    private REFERENCE_RANGE[] other_reference_rangesField;
        
    //    private CODE_PHRASE normal_statusField;
        
    //    /// <remarks/>
    //    public DV_INTERVAL normal_range {
    //        get {
    //            return this.normal_rangeField;
    //        }
    //        set {
    //            this.normal_rangeField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    [System.Xml.Serialization.XmlElementAttribute("other_reference_ranges")]
    //    public REFERENCE_RANGE[] other_reference_ranges {
    //        get {
    //            return this.other_reference_rangesField;
    //        }
    //        set {
    //            this.other_reference_rangesField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public CODE_PHRASE normal_status {
    //        get {
    //            return this.normal_statusField;
    //        }
    //        set {
    //            this.normal_statusField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class REFERENCE_RANGE {
        
    //    private DV_TEXT meaningField;
        
    //    private DV_INTERVAL rangeField;
        
    //    /// <remarks/>
    //    public DV_TEXT meaning {
    //        get {
    //            return this.meaningField;
    //        }
    //        set {
    //            this.meaningField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public DV_INTERVAL range {
    //        get {
    //            return this.rangeField;
    //        }
    //        set {
    //            this.rangeField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class DV_ORDINAL : DV_ORDERED {
        
    //    private int valueField;
        
    //    private DV_CODED_TEXT symbolField;
        
    //    /// <remarks/>
    //    public int value {
    //        get {
    //            return this.valueField;
    //        }
    //        set {
    //            this.valueField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public DV_CODED_TEXT symbol {
    //        get {
    //            return this.symbolField;
    //        }
    //        set {
    //            this.symbolField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(DV_TEMPORAL))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(DV_DATE))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(DV_TIME))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(DV_DATE_TIME))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(DV_AMOUNT))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(DV_DURATION))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(DV_PROPORTION))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(DV_QUANTITY))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(DV_COUNT))]
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public abstract partial class DV_QUANTIFIED : DV_ORDERED {
        
    //    private DV_QUANTIFIEDMagnitude_status magnitude_statusField;
        
    //    private bool magnitude_statusFieldSpecified;
        
    //    /// <remarks/>
    //    public DV_QUANTIFIEDMagnitude_status magnitude_status {
    //        get {
    //            return this.magnitude_statusField;
    //        }
    //        set {
    //            this.magnitude_statusField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    [System.Xml.Serialization.XmlIgnoreAttribute()]
    //    public bool magnitude_statusSpecified {
    //        get {
    //            return this.magnitude_statusFieldSpecified;
    //        }
    //        set {
    //            this.magnitude_statusFieldSpecified = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.openehr.org/v1")]
    //public enum DV_QUANTIFIEDMagnitude_status {
        
    //    /// <remarks/>
    //    [System.Xml.Serialization.XmlEnumAttribute("=")]
    //    Item,
        
    //    /// <remarks/>
    //    [System.Xml.Serialization.XmlEnumAttribute("<")]
    //    Item1,
        
    //    /// <remarks/>
    //    [System.Xml.Serialization.XmlEnumAttribute("<=")]
    //    Item2,
        
    //    /// <remarks/>
    //    [System.Xml.Serialization.XmlEnumAttribute(">")]
    //    Item3,
        
    //    /// <remarks/>
    //    [System.Xml.Serialization.XmlEnumAttribute(">=")]
    //    Item4,
        
    //    /// <remarks/>
    //    [System.Xml.Serialization.XmlEnumAttribute("~")]
    //    Item5,
    //}
    
    ///// <remarks/>
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(DV_DATE))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(DV_TIME))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(DV_DATE_TIME))]
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class DV_TEMPORAL : DV_QUANTIFIED {
        
    //    private DV_DURATION accuracyField;
        
    //    /// <remarks/>
    //    public DV_DURATION accuracy {
    //        get {
    //            return this.accuracyField;
    //        }
    //        set {
    //            this.accuracyField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class DV_DURATION : DV_AMOUNT {
        
    //    private string valueField;
        
    //    /// <remarks/>
    //    public string value {
    //        get {
    //            return this.valueField;
    //        }
    //        set {
    //            this.valueField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(DV_DURATION))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(DV_PROPORTION))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(DV_QUANTITY))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(DV_COUNT))]
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class DV_AMOUNT : DV_QUANTIFIED {
        
    //    private float accuracyField;
        
    //    private bool accuracy_is_percentField;
        
    //    private bool accuracy_is_percentFieldSpecified;
        
    //    public DV_AMOUNT() {
    //        this.accuracyField = ((float)(-1F));
    //    }
        
    //    /// <remarks/>
    //    [System.ComponentModel.DefaultValueAttribute(typeof(float), "-1")]
    //    public float accuracy {
    //        get {
    //            return this.accuracyField;
    //        }
    //        set {
    //            this.accuracyField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public bool accuracy_is_percent {
    //        get {
    //            return this.accuracy_is_percentField;
    //        }
    //        set {
    //            this.accuracy_is_percentField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    [System.Xml.Serialization.XmlIgnoreAttribute()]
    //    public bool accuracy_is_percentSpecified {
    //        get {
    //            return this.accuracy_is_percentFieldSpecified;
    //        }
    //        set {
    //            this.accuracy_is_percentFieldSpecified = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class DV_PROPORTION : DV_AMOUNT {
        
    //    private float numeratorField;
        
    //    private float denominatorField;
        
    //    private PROPORTION_KIND typeField;
        
    //    private int precisionField;
        
    //    public DV_PROPORTION() {
    //        this.precisionField = -1;
    //    }
        
    //    /// <remarks/>
    //    public float numerator {
    //        get {
    //            return this.numeratorField;
    //        }
    //        set {
    //            this.numeratorField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public float denominator {
    //        get {
    //            return this.denominatorField;
    //        }
    //        set {
    //            this.denominatorField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public PROPORTION_KIND type {
    //        get {
    //            return this.typeField;
    //        }
    //        set {
    //            this.typeField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    [System.ComponentModel.DefaultValueAttribute(-1)]
    //    public int precision {
    //        get {
    //            return this.precisionField;
    //        }
    //        set {
    //            this.precisionField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public enum PROPORTION_KIND {
        
    //    /// <remarks/>
    //    [System.Xml.Serialization.XmlEnumAttribute("0")]
    //    Item0,
        
    //    /// <remarks/>
    //    [System.Xml.Serialization.XmlEnumAttribute("1")]
    //    Item1,
        
    //    /// <remarks/>
    //    [System.Xml.Serialization.XmlEnumAttribute("2")]
    //    Item2,
        
    //    /// <remarks/>
    //    [System.Xml.Serialization.XmlEnumAttribute("3")]
    //    Item3,
        
    //    /// <remarks/>
    //    [System.Xml.Serialization.XmlEnumAttribute("4")]
    //    Item4,
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class DV_QUANTITY : DV_AMOUNT {
        
    //    private double magnitudeField;
        
    //    private string unitsField;
        
    //    private int precisionField;
        
    //    public DV_QUANTITY() {
    //        this.precisionField = -1;
    //    }
        
    //    /// <remarks/>
    //    public double magnitude {
    //        get {
    //            return this.magnitudeField;
    //        }
    //        set {
    //            this.magnitudeField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public string units {
    //        get {
    //            return this.unitsField;
    //        }
    //        set {
    //            this.unitsField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    [System.ComponentModel.DefaultValueAttribute(-1)]
    //    public int precision {
    //        get {
    //            return this.precisionField;
    //        }
    //        set {
    //            this.precisionField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class DV_COUNT : DV_AMOUNT {
        
    //    private long magnitudeField;
        
    //    /// <remarks/>
    //    public long magnitude {
    //        get {
    //            return this.magnitudeField;
    //        }
    //        set {
    //            this.magnitudeField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class DV_DATE : DV_TEMPORAL {
        
    //    private string valueField;
        
    //    /// <remarks/>
    //    public string value {
    //        get {
    //            return this.valueField;
    //        }
    //        set {
    //            this.valueField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class DV_TIME : DV_TEMPORAL {
        
    //    private string valueField;
        
    //    /// <remarks/>
    //    public string value {
    //        get {
    //            return this.valueField;
    //        }
    //        set {
    //            this.valueField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class DV_DATE_TIME : DV_TEMPORAL {
        
    //    private string valueField;
        
    //    /// <remarks/>
    //    public string value {
    //        get {
    //            return this.valueField;
    //        }
    //        set {
    //            this.valueField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class DV_STATE : DATA_VALUE {
        
    //    private DV_CODED_TEXT valueField;
        
    //    private bool is_terminalField;
        
    //    /// <remarks/>
    //    public DV_CODED_TEXT value {
    //        get {
    //            return this.valueField;
    //        }
    //        set {
    //            this.valueField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public bool is_terminal {
    //        get {
    //            return this.is_terminalField;
    //        }
    //        set {
    //            this.is_terminalField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class DV_BOOLEAN : DATA_VALUE {
        
    //    private bool valueField;
        
    //    /// <remarks/>
    //    public bool value {
    //        get {
    //            return this.valueField;
    //        }
    //        set {
    //            this.valueField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class PARTY_RELATED : PARTY_IDENTIFIED {
        
    //    private DV_CODED_TEXT relationshipField;
        
    //    /// <remarks/>
    //    public DV_CODED_TEXT relationship {
    //        get {
    //            return this.relationshipField;
    //        }
    //        set {
    //            this.relationshipField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class ATTESTATION : AUDIT_DETAILS {
        
    //    private DV_MULTIMEDIA attested_viewField;
        
    //    private string proofField;
        
    //    private DV_EHR_URI[] itemsField;
        
    //    private DV_TEXT reasonField;
        
    //    private bool is_pendingField;
        
    //    public ATTESTATION() {
    //        this.is_pendingField = false;
    //    }
        
    //    /// <remarks/>
    //    public DV_MULTIMEDIA attested_view {
    //        get {
    //            return this.attested_viewField;
    //        }
    //        set {
    //            this.attested_viewField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public string proof {
    //        get {
    //            return this.proofField;
    //        }
    //        set {
    //            this.proofField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    [System.Xml.Serialization.XmlElementAttribute("items")]
    //    public DV_EHR_URI[] items {
    //        get {
    //            return this.itemsField;
    //        }
    //        set {
    //            this.itemsField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public DV_TEXT reason {
    //        get {
    //            return this.reasonField;
    //        }
    //        set {
    //            this.reasonField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public bool is_pending {
    //        get {
    //            return this.is_pendingField;
    //        }
    //        set {
    //            this.is_pendingField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class REVISION_HISTORY_ITEM {
        
    //    private OBJECT_VERSION_ID version_idField;
        
    //    private AUDIT_DETAILS[] auditsField;
        
    //    /// <remarks/>
    //    public OBJECT_VERSION_ID version_id {
    //        get {
    //            return this.version_idField;
    //        }
    //        set {
    //            this.version_idField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    [System.Xml.Serialization.XmlElementAttribute("audits")]
    //    public AUDIT_DETAILS[] audits {
    //        get {
    //            return this.auditsField;
    //        }
    //        set {
    //            this.auditsField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class OBJECT_VERSION_ID : UID_BASED_ID {
    //}
    
    ///// <remarks/>
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(HIER_OBJECT_ID))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(OBJECT_VERSION_ID))]
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public abstract partial class UID_BASED_ID : OBJECT_ID {
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class HIER_OBJECT_ID : UID_BASED_ID {
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://oceanehr.com/EhrGate")]
    //public partial class ResultSet {
        
    //    private string nameField;
        
    //    private int totalResultsField;
        
    //    private bool totalResultsFieldSpecified;
        
    //    private ResultSetColumns[] columnsField;
        
    //    private object[][] rowsField;
        
    //    /// <remarks/>
    //    public string name {
    //        get {
    //            return this.nameField;
    //        }
    //        set {
    //            this.nameField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public int totalResults {
    //        get {
    //            return this.totalResultsField;
    //        }
    //        set {
    //            this.totalResultsField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    [System.Xml.Serialization.XmlIgnoreAttribute()]
    //    public bool totalResultsSpecified {
    //        get {
    //            return this.totalResultsFieldSpecified;
    //        }
    //        set {
    //            this.totalResultsFieldSpecified = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    [System.Xml.Serialization.XmlElementAttribute("columns", IsNullable=true)]
    //    public ResultSetColumns[] columns {
    //        get {
    //            return this.columnsField;
    //        }
    //        set {
    //            this.columnsField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    [System.Xml.Serialization.XmlArrayItemAttribute("row", IsNullable=false)]
    //    [System.Xml.Serialization.XmlArrayItemAttribute("items", NestingLevel=1)]
    //    public object[][] rows {
    //        get {
    //            return this.rowsField;
    //        }
    //        set {
    //            this.rowsField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oceanehr.com/EhrGate")]
    //public partial class ResultSetColumns {
        
    //    private string nameField;
        
    //    private string pathField;
        
    //    /// <remarks/>
    //    public string name {
    //        get {
    //            return this.nameField;
    //        }
    //        set {
    //            this.nameField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public string path {
    //        get {
    //            return this.pathField;
    //        }
    //        set {
    //            this.pathField = value;
    //        }
    //    }
    //}
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://oceanehr.com/EhrGate/EhrService/v1")]
    public partial class ContributionVersion {
        
        private AuditChangeType changeTypeField;
        
        private VersionLifecycleState lifecycleStateField;
        
        private string precedingVersionUidField;

        private OpenEhr.RM.Common.Archetyped.Impl.Locatable itemField;
        
        /// <remarks/>
        public AuditChangeType changeType {
            get {
                return this.changeTypeField;
            }
            set {
                this.changeTypeField = value;
            }
        }
        
        /// <remarks/>
        public VersionLifecycleState lifecycleState {
            get {
                return this.lifecycleStateField;
            }
            set {
                this.lifecycleStateField = value;
            }
        }
        
        /// <remarks/>
        public string precedingVersionUid {
            get {
                return this.precedingVersionUidField;
            }
            set {
                this.precedingVersionUidField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("composition", typeof(Composition))]
        [System.Xml.Serialization.XmlElementAttribute("directory", typeof(Folder))]
        [System.Xml.Serialization.XmlElementAttribute("ehrStatus", typeof(EhrStatus))]
        public OpenEhr.RM.Common.Archetyped.Impl.Locatable Item
        {
            get
            {
                return this.itemField;
            }
            set
            {
                this.itemField = value;
            }
        }
    }
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://oceanehr.com/EhrGate/EhrService/v1")]
    //public enum AuditChangeType {
        
    //    /// <remarks/>
    //    creation,
        
    //    /// <remarks/>
    //    amendment,
        
    //    /// <remarks/>
    //    modification,
        
    //    /// <remarks/>
    //    synthesis,
        
    //    /// <remarks/>
    //    deleted,
        
    //    /// <remarks/>
    //    attestation,
        
    //    /// <remarks/>
    //    unknown,
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://oceanehr.com/EhrGate/EhrService/v1")]
    //public enum VersionLifecycleState {
        
    //    /// <remarks/>
    //    complete,
        
    //    /// <remarks/>
    //    incomplete,
        
    //    /// <remarks/>
    //    deleted,
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class COMPOSITION : LOCATABLE {
        
    //    private CODE_PHRASE languageField;
        
    //    private CODE_PHRASE territoryField;
        
    //    private DV_CODED_TEXT categoryField;
        
    //    private PARTY_PROXY composerField;
        
    //    private EVENT_CONTEXT contextField;
        
    //    private CONTENT_ITEM[] contentField;
        
    //    /// <remarks/>
    //    public CODE_PHRASE language {
    //        get {
    //            return this.languageField;
    //        }
    //        set {
    //            this.languageField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public CODE_PHRASE territory {
    //        get {
    //            return this.territoryField;
    //        }
    //        set {
    //            this.territoryField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public DV_CODED_TEXT category {
    //        get {
    //            return this.categoryField;
    //        }
    //        set {
    //            this.categoryField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public PARTY_PROXY composer {
    //        get {
    //            return this.composerField;
    //        }
    //        set {
    //            this.composerField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public EVENT_CONTEXT context {
    //        get {
    //            return this.contextField;
    //        }
    //        set {
    //            this.contextField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    [System.Xml.Serialization.XmlElementAttribute("content")]
    //    public CONTENT_ITEM[] content {
    //        get {
    //            return this.contentField;
    //        }
    //        set {
    //            this.contentField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class EVENT_CONTEXT {
        
    //    private DV_DATE_TIME start_timeField;
        
    //    private DV_DATE_TIME end_timeField;
        
    //    private string locationField;
        
    //    private DV_CODED_TEXT settingField;
        
    //    private ITEM_STRUCTURE other_contextField;
        
    //    private PARTY_IDENTIFIED health_care_facilityField;
        
    //    private PARTICIPATION[] participationsField;
        
    //    /// <remarks/>
    //    public DV_DATE_TIME start_time {
    //        get {
    //            return this.start_timeField;
    //        }
    //        set {
    //            this.start_timeField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public DV_DATE_TIME end_time {
    //        get {
    //            return this.end_timeField;
    //        }
    //        set {
    //            this.end_timeField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public string location {
    //        get {
    //            return this.locationField;
    //        }
    //        set {
    //            this.locationField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public DV_CODED_TEXT setting {
    //        get {
    //            return this.settingField;
    //        }
    //        set {
    //            this.settingField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public ITEM_STRUCTURE other_context {
    //        get {
    //            return this.other_contextField;
    //        }
    //        set {
    //            this.other_contextField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public PARTY_IDENTIFIED health_care_facility {
    //        get {
    //            return this.health_care_facilityField;
    //        }
    //        set {
    //            this.health_care_facilityField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    [System.Xml.Serialization.XmlElementAttribute("participations")]
    //    public PARTICIPATION[] participations {
    //        get {
    //            return this.participationsField;
    //        }
    //        set {
    //            this.participationsField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(ITEM_TABLE))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(ITEM_TREE))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(ITEM_LIST))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(ITEM_SINGLE))]
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public abstract partial class ITEM_STRUCTURE : LOCATABLE {
    //}
    
    ///// <remarks/>
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(EHR_STATUS))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(FOLDER))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(ACTIVITY))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(EVENT))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(INTERVAL_EVENT))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(POINT_EVENT))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(HISTORY))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(CONTENT_ITEM))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(ENTRY))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(CARE_ENTRY))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(ACTION))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(INSTRUCTION))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(OBSERVATION))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(EVALUATION))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(ADMIN_ENTRY))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(GENERIC_ENTRY))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(SECTION))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(ITEM))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(ELEMENT))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(CLUSTER))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(ITEM_STRUCTURE))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(ITEM_TABLE))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(ITEM_TREE))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(ITEM_LIST))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(ITEM_SINGLE))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(COMPOSITION))]
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public abstract partial class LOCATABLE {
        
    //    private DV_TEXT nameField;
        
    //    private UID_BASED_ID uidField;
        
    //    private LINK[] linksField;
        
    //    private ARCHETYPED archetype_detailsField;
        
    //    private FEEDER_AUDIT feeder_auditField;
        
    //    private string archetype_node_idField;
        
    //    /// <remarks/>
    //    public DV_TEXT name {
    //        get {
    //            return this.nameField;
    //        }
    //        set {
    //            this.nameField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public UID_BASED_ID uid {
    //        get {
    //            return this.uidField;
    //        }
    //        set {
    //            this.uidField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    [System.Xml.Serialization.XmlElementAttribute("links")]
    //    public LINK[] links {
    //        get {
    //            return this.linksField;
    //        }
    //        set {
    //            this.linksField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public ARCHETYPED archetype_details {
    //        get {
    //            return this.archetype_detailsField;
    //        }
    //        set {
    //            this.archetype_detailsField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public FEEDER_AUDIT feeder_audit {
    //        get {
    //            return this.feeder_auditField;
    //        }
    //        set {
    //            this.feeder_auditField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    [System.Xml.Serialization.XmlAttributeAttribute()]
    //    public string archetype_node_id {
    //        get {
    //            return this.archetype_node_idField;
    //        }
    //        set {
    //            this.archetype_node_idField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class LINK {
        
    //    private DV_TEXT meaningField;
        
    //    private DV_TEXT typeField;
        
    //    private DV_EHR_URI targetField;
        
    //    /// <remarks/>
    //    public DV_TEXT meaning {
    //        get {
    //            return this.meaningField;
    //        }
    //        set {
    //            this.meaningField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public DV_TEXT type {
    //        get {
    //            return this.typeField;
    //        }
    //        set {
    //            this.typeField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public DV_EHR_URI target {
    //        get {
    //            return this.targetField;
    //        }
    //        set {
    //            this.targetField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class ARCHETYPED {
        
    //    private ARCHETYPE_ID archetype_idField;
        
    //    private TEMPLATE_ID template_idField;
        
    //    private string rm_versionField;
        
    //    /// <remarks/>
    //    public ARCHETYPE_ID archetype_id {
    //        get {
    //            return this.archetype_idField;
    //        }
    //        set {
    //            this.archetype_idField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public TEMPLATE_ID template_id {
    //        get {
    //            return this.template_idField;
    //        }
    //        set {
    //            this.template_idField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public string rm_version {
    //        get {
    //            return this.rm_versionField;
    //        }
    //        set {
    //            this.rm_versionField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class ARCHETYPE_ID : OBJECT_ID {
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class TEMPLATE_ID : OBJECT_ID {
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class FEEDER_AUDIT {
        
    //    private DV_IDENTIFIER[] originating_system_item_idsField;
        
    //    private DV_IDENTIFIER[] feeder_system_item_idsField;
        
    //    private DV_ENCAPSULATED original_contentField;
        
    //    private FEEDER_AUDIT_DETAILS originating_system_auditField;
        
    //    private FEEDER_AUDIT_DETAILS feeder_system_auditField;
        
    //    /// <remarks/>
    //    [System.Xml.Serialization.XmlElementAttribute("originating_system_item_ids")]
    //    public DV_IDENTIFIER[] originating_system_item_ids {
    //        get {
    //            return this.originating_system_item_idsField;
    //        }
    //        set {
    //            this.originating_system_item_idsField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    [System.Xml.Serialization.XmlElementAttribute("feeder_system_item_ids")]
    //    public DV_IDENTIFIER[] feeder_system_item_ids {
    //        get {
    //            return this.feeder_system_item_idsField;
    //        }
    //        set {
    //            this.feeder_system_item_idsField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public DV_ENCAPSULATED original_content {
    //        get {
    //            return this.original_contentField;
    //        }
    //        set {
    //            this.original_contentField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public FEEDER_AUDIT_DETAILS originating_system_audit {
    //        get {
    //            return this.originating_system_auditField;
    //        }
    //        set {
    //            this.originating_system_auditField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public FEEDER_AUDIT_DETAILS feeder_system_audit {
    //        get {
    //            return this.feeder_system_auditField;
    //        }
    //        set {
    //            this.feeder_system_auditField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class FEEDER_AUDIT_DETAILS {
        
    //    private string system_idField;
        
    //    private PARTY_IDENTIFIED locationField;
        
    //    private PARTY_IDENTIFIED providerField;
        
    //    private PARTY_PROXY subjectField;
        
    //    private DV_DATE_TIME timeField;
        
    //    private string version_idField;
        
    //    /// <remarks/>
    //    public string system_id {
    //        get {
    //            return this.system_idField;
    //        }
    //        set {
    //            this.system_idField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public PARTY_IDENTIFIED location {
    //        get {
    //            return this.locationField;
    //        }
    //        set {
    //            this.locationField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public PARTY_IDENTIFIED provider {
    //        get {
    //            return this.providerField;
    //        }
    //        set {
    //            this.providerField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public PARTY_PROXY subject {
    //        get {
    //            return this.subjectField;
    //        }
    //        set {
    //            this.subjectField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public DV_DATE_TIME time {
    //        get {
    //            return this.timeField;
    //        }
    //        set {
    //            this.timeField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public string version_id {
    //        get {
    //            return this.version_idField;
    //        }
    //        set {
    //            this.version_idField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class EHR_STATUS : LOCATABLE {
        
    //    private PARTY_SELF subjectField;
        
    //    private bool is_queryableField;
        
    //    private bool is_modifiableField;
        
    //    private ITEM_STRUCTURE other_detailsField;
        
    //    /// <remarks/>
    //    public PARTY_SELF subject {
    //        get {
    //            return this.subjectField;
    //        }
    //        set {
    //            this.subjectField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public bool is_queryable {
    //        get {
    //            return this.is_queryableField;
    //        }
    //        set {
    //            this.is_queryableField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public bool is_modifiable {
    //        get {
    //            return this.is_modifiableField;
    //        }
    //        set {
    //            this.is_modifiableField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public ITEM_STRUCTURE other_details {
    //        get {
    //            return this.other_detailsField;
    //        }
    //        set {
    //            this.other_detailsField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class FOLDER : LOCATABLE {
        
    //    private FOLDER[] foldersField;
        
    //    private OBJECT_REF[] itemsField;
        
    //    /// <remarks/>
    //    [System.Xml.Serialization.XmlElementAttribute("folders")]
    //    public FOLDER[] folders {
    //        get {
    //            return this.foldersField;
    //        }
    //        set {
    //            this.foldersField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    [System.Xml.Serialization.XmlElementAttribute("items")]
    //    public OBJECT_REF[] items {
    //        get {
    //            return this.itemsField;
    //        }
    //        set {
    //            this.itemsField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class ACTIVITY : LOCATABLE {
        
    //    private ITEM_STRUCTURE descriptionField;
        
    //    private DV_PARSABLE timingField;
        
    //    private string action_archetype_idField;
        
    //    /// <remarks/>
    //    public ITEM_STRUCTURE description {
    //        get {
    //            return this.descriptionField;
    //        }
    //        set {
    //            this.descriptionField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public DV_PARSABLE timing {
    //        get {
    //            return this.timingField;
    //        }
    //        set {
    //            this.timingField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public string action_archetype_id {
    //        get {
    //            return this.action_archetype_idField;
    //        }
    //        set {
    //            this.action_archetype_idField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(INTERVAL_EVENT))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(POINT_EVENT))]
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public abstract partial class EVENT : LOCATABLE {
        
    //    private DV_DATE_TIME timeField;
        
    //    private ITEM_STRUCTURE dataField;
        
    //    private ITEM_STRUCTURE stateField;
        
    //    /// <remarks/>
    //    public DV_DATE_TIME time {
    //        get {
    //            return this.timeField;
    //        }
    //        set {
    //            this.timeField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public ITEM_STRUCTURE data {
    //        get {
    //            return this.dataField;
    //        }
    //        set {
    //            this.dataField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public ITEM_STRUCTURE state {
    //        get {
    //            return this.stateField;
    //        }
    //        set {
    //            this.stateField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class INTERVAL_EVENT : EVENT {
        
    //    private DV_DURATION widthField;
        
    //    private int sample_countField;
        
    //    private bool sample_countFieldSpecified;
        
    //    private DV_CODED_TEXT math_functionField;
        
    //    /// <remarks/>
    //    public DV_DURATION width {
    //        get {
    //            return this.widthField;
    //        }
    //        set {
    //            this.widthField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public int sample_count {
    //        get {
    //            return this.sample_countField;
    //        }
    //        set {
    //            this.sample_countField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    [System.Xml.Serialization.XmlIgnoreAttribute()]
    //    public bool sample_countSpecified {
    //        get {
    //            return this.sample_countFieldSpecified;
    //        }
    //        set {
    //            this.sample_countFieldSpecified = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public DV_CODED_TEXT math_function {
    //        get {
    //            return this.math_functionField;
    //        }
    //        set {
    //            this.math_functionField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class POINT_EVENT : EVENT {
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class HISTORY : LOCATABLE {
        
    //    private DV_DATE_TIME originField;
        
    //    private DV_DURATION periodField;
        
    //    private DV_DURATION durationField;
        
    //    private EVENT[] eventsField;
        
    //    private ITEM_STRUCTURE summaryField;
        
    //    /// <remarks/>
    //    public DV_DATE_TIME origin {
    //        get {
    //            return this.originField;
    //        }
    //        set {
    //            this.originField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public DV_DURATION period {
    //        get {
    //            return this.periodField;
    //        }
    //        set {
    //            this.periodField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public DV_DURATION duration {
    //        get {
    //            return this.durationField;
    //        }
    //        set {
    //            this.durationField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    [System.Xml.Serialization.XmlElementAttribute("events")]
    //    public EVENT[] events {
    //        get {
    //            return this.eventsField;
    //        }
    //        set {
    //            this.eventsField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public ITEM_STRUCTURE summary {
    //        get {
    //            return this.summaryField;
    //        }
    //        set {
    //            this.summaryField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(ENTRY))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(CARE_ENTRY))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(ACTION))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(INSTRUCTION))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(OBSERVATION))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(EVALUATION))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(ADMIN_ENTRY))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(GENERIC_ENTRY))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(SECTION))]
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public abstract partial class CONTENT_ITEM : LOCATABLE {
    //}
    
    ///// <remarks/>
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(CARE_ENTRY))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(ACTION))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(INSTRUCTION))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(OBSERVATION))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(EVALUATION))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(ADMIN_ENTRY))]
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public abstract partial class ENTRY : CONTENT_ITEM {
        
    //    private CODE_PHRASE languageField;
        
    //    private CODE_PHRASE encodingField;
        
    //    private PARTY_PROXY subjectField;
        
    //    private PARTY_PROXY providerField;
        
    //    private PARTICIPATION[] other_participationsField;
        
    //    private OBJECT_REF work_flow_idField;
        
    //    /// <remarks/>
    //    public CODE_PHRASE language {
    //        get {
    //            return this.languageField;
    //        }
    //        set {
    //            this.languageField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public CODE_PHRASE encoding {
    //        get {
    //            return this.encodingField;
    //        }
    //        set {
    //            this.encodingField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public PARTY_PROXY subject {
    //        get {
    //            return this.subjectField;
    //        }
    //        set {
    //            this.subjectField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public PARTY_PROXY provider {
    //        get {
    //            return this.providerField;
    //        }
    //        set {
    //            this.providerField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    [System.Xml.Serialization.XmlElementAttribute("other_participations")]
    //    public PARTICIPATION[] other_participations {
    //        get {
    //            return this.other_participationsField;
    //        }
    //        set {
    //            this.other_participationsField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public OBJECT_REF work_flow_id {
    //        get {
    //            return this.work_flow_idField;
    //        }
    //        set {
    //            this.work_flow_idField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class PARTICIPATION {
        
    //    private DV_TEXT functionField;
        
    //    private PARTY_PROXY performerField;
        
    //    private DV_INTERVAL timeField;
        
    //    private DV_CODED_TEXT modeField;
        
    //    /// <remarks/>
    //    public DV_TEXT function {
    //        get {
    //            return this.functionField;
    //        }
    //        set {
    //            this.functionField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public PARTY_PROXY performer {
    //        get {
    //            return this.performerField;
    //        }
    //        set {
    //            this.performerField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public DV_INTERVAL time {
    //        get {
    //            return this.timeField;
    //        }
    //        set {
    //            this.timeField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public DV_CODED_TEXT mode {
    //        get {
    //            return this.modeField;
    //        }
    //        set {
    //            this.modeField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(ACTION))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(INSTRUCTION))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(OBSERVATION))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(EVALUATION))]
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public abstract partial class CARE_ENTRY : ENTRY {
        
    //    private ITEM_STRUCTURE protocolField;
        
    //    private OBJECT_REF guideline_idField;
        
    //    /// <remarks/>
    //    public ITEM_STRUCTURE protocol {
    //        get {
    //            return this.protocolField;
    //        }
    //        set {
    //            this.protocolField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public OBJECT_REF guideline_id {
    //        get {
    //            return this.guideline_idField;
    //        }
    //        set {
    //            this.guideline_idField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class ACTION : CARE_ENTRY {
        
    //    private DV_DATE_TIME timeField;
        
    //    private ITEM_STRUCTURE descriptionField;
        
    //    private ISM_TRANSITION ism_transitionField;
        
    //    private INSTRUCTION_DETAILS instruction_detailsField;
        
    //    /// <remarks/>
    //    public DV_DATE_TIME time {
    //        get {
    //            return this.timeField;
    //        }
    //        set {
    //            this.timeField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public ITEM_STRUCTURE description {
    //        get {
    //            return this.descriptionField;
    //        }
    //        set {
    //            this.descriptionField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public ISM_TRANSITION ism_transition {
    //        get {
    //            return this.ism_transitionField;
    //        }
    //        set {
    //            this.ism_transitionField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public INSTRUCTION_DETAILS instruction_details {
    //        get {
    //            return this.instruction_detailsField;
    //        }
    //        set {
    //            this.instruction_detailsField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class ISM_TRANSITION {
        
    //    private DV_CODED_TEXT current_stateField;
        
    //    private DV_CODED_TEXT transitionField;
        
    //    private DV_CODED_TEXT careflow_stepField;
        
    //    /// <remarks/>
    //    public DV_CODED_TEXT current_state {
    //        get {
    //            return this.current_stateField;
    //        }
    //        set {
    //            this.current_stateField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public DV_CODED_TEXT transition {
    //        get {
    //            return this.transitionField;
    //        }
    //        set {
    //            this.transitionField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public DV_CODED_TEXT careflow_step {
    //        get {
    //            return this.careflow_stepField;
    //        }
    //        set {
    //            this.careflow_stepField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class INSTRUCTION_DETAILS {
        
    //    private LOCATABLE_REF instruction_idField;
        
    //    private string activity_idField;
        
    //    private ITEM_STRUCTURE wf_detailsField;
        
    //    /// <remarks/>
    //    public LOCATABLE_REF instruction_id {
    //        get {
    //            return this.instruction_idField;
    //        }
    //        set {
    //            this.instruction_idField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public string activity_id {
    //        get {
    //            return this.activity_idField;
    //        }
    //        set {
    //            this.activity_idField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public ITEM_STRUCTURE wf_details {
    //        get {
    //            return this.wf_detailsField;
    //        }
    //        set {
    //            this.wf_detailsField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class LOCATABLE_REF : OBJECT_REF {
        
    //    private string pathField;
        
    //    /// <remarks/>
    //    public string path {
    //        get {
    //            return this.pathField;
    //        }
    //        set {
    //            this.pathField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class INSTRUCTION : CARE_ENTRY {
        
    //    private DV_TEXT narrativeField;
        
    //    private DV_DATE_TIME expiry_timeField;
        
    //    private DV_PARSABLE wf_definitionField;
        
    //    private ACTIVITY[] activitiesField;
        
    //    /// <remarks/>
    //    public DV_TEXT narrative {
    //        get {
    //            return this.narrativeField;
    //        }
    //        set {
    //            this.narrativeField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public DV_DATE_TIME expiry_time {
    //        get {
    //            return this.expiry_timeField;
    //        }
    //        set {
    //            this.expiry_timeField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public DV_PARSABLE wf_definition {
    //        get {
    //            return this.wf_definitionField;
    //        }
    //        set {
    //            this.wf_definitionField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    [System.Xml.Serialization.XmlElementAttribute("activities")]
    //    public ACTIVITY[] activities {
    //        get {
    //            return this.activitiesField;
    //        }
    //        set {
    //            this.activitiesField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class OBSERVATION : CARE_ENTRY {
        
    //    private HISTORY dataField;
        
    //    private HISTORY stateField;
        
    //    /// <remarks/>
    //    public HISTORY data {
    //        get {
    //            return this.dataField;
    //        }
    //        set {
    //            this.dataField = value;
    //        }
    //    }
        
    //    /// <remarks/>
    //    public HISTORY state {
    //        get {
    //            return this.stateField;
    //        }
    //        set {
    //            this.stateField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class EVALUATION : CARE_ENTRY {
        
    //    private ITEM_STRUCTURE dataField;
        
    //    /// <remarks/>
    //    public ITEM_STRUCTURE data {
    //        get {
    //            return this.dataField;
    //        }
    //        set {
    //            this.dataField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class ADMIN_ENTRY : ENTRY {
        
    //    private ITEM_STRUCTURE dataField;
        
    //    /// <remarks/>
    //    public ITEM_STRUCTURE data {
    //        get {
    //            return this.dataField;
    //        }
    //        set {
    //            this.dataField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class GENERIC_ENTRY : CONTENT_ITEM {
        
    //    private ITEM_TREE dataField;
        
    //    /// <remarks/>
    //    public ITEM_TREE data {
    //        get {
    //            return this.dataField;
    //        }
    //        set {
    //            this.dataField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class ITEM_TREE : ITEM_STRUCTURE {
        
    //    private ITEM[] itemsField;
        
    //    /// <remarks/>
    //    [System.Xml.Serialization.XmlElementAttribute("items")]
    //    public ITEM[] items {
    //        get {
    //            return this.itemsField;
    //        }
    //        set {
    //            this.itemsField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(ELEMENT))]
    //[System.Xml.Serialization.XmlIncludeAttribute(typeof(CLUSTER))]
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public abstract partial class ITEM : LOCATABLE {
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class ELEMENT : ITEM {
        
    //    private DATA_VALUE itemField;
        
    //    /// <remarks/>
    //    [System.Xml.Serialization.XmlElementAttribute("null_flavour", typeof(DV_CODED_TEXT))]
    //    [System.Xml.Serialization.XmlElementAttribute("value", typeof(DATA_VALUE))]
    //    public DATA_VALUE Item {
    //        get {
    //            return this.itemField;
    //        }
    //        set {
    //            this.itemField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class CLUSTER : ITEM {
        
    //    private ITEM[] itemsField;
        
    //    /// <remarks/>
    //    [System.Xml.Serialization.XmlElementAttribute("items")]
    //    public ITEM[] items {
    //        get {
    //            return this.itemsField;
    //        }
    //        set {
    //            this.itemsField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class SECTION : CONTENT_ITEM {
        
    //    private CONTENT_ITEM[] itemsField;
        
    //    /// <remarks/>
    //    [System.Xml.Serialization.XmlElementAttribute("items")]
    //    public CONTENT_ITEM[] items {
    //        get {
    //            return this.itemsField;
    //        }
    //        set {
    //            this.itemsField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class ITEM_TABLE : ITEM_STRUCTURE {
        
    //    private CLUSTER[] rowsField;
        
    //    /// <remarks/>
    //    [System.Xml.Serialization.XmlElementAttribute("rows")]
    //    public CLUSTER[] rows {
    //        get {
    //            return this.rowsField;
    //        }
    //        set {
    //            this.rowsField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class ITEM_LIST : ITEM_STRUCTURE {
        
    //    private ELEMENT[] itemsField;
        
    //    /// <remarks/>
    //    [System.Xml.Serialization.XmlElementAttribute("items")]
    //    public ELEMENT[] items {
    //        get {
    //            return this.itemsField;
    //        }
    //        set {
    //            this.itemsField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class ITEM_SINGLE : ITEM_STRUCTURE {
        
    //    private ELEMENT itemField;
        
    //    /// <remarks/>
    //    public ELEMENT item {
    //        get {
    //            return this.itemField;
    //        }
    //        set {
    //            this.itemField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class GENERIC_ID : OBJECT_ID {
        
    //    private string schemeField;
        
    //    /// <remarks/>
    //    public string scheme {
    //        get {
    //            return this.schemeField;
    //        }
    //        set {
    //            this.schemeField = value;
    //        }
    //    }
    //}
    
    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.openehr.org/v1")]
    //public partial class ACCESS_GROUP_REF : OBJECT_REF {
    //}
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void AuthenticateUserCompletedEventHandler(object sender, AuthenticateUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthenticateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthenticateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void OpenSessionCompletedEventHandler(object sender, OpenSessionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OpenSessionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OpenSessionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void LoginSessionCompletedEventHandler(object sender, LoginSessionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginSessionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginSessionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void CloseSessionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void IsOpenSessionCompletedEventHandler(object sender, IsOpenSessionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsOpenSessionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsOpenSessionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void FindCompletedEventHandler(object sender, FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void FindEHRsCompletedEventHandler(object sender, FindEHRsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindEHRsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindEHRsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void CreateCompletedEventHandler(object sender, CreateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void DeleteEhrCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetSubjectCompletedEventHandler(object sender, GetSubjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSubjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSubjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PartyRef Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PartyRef)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void CommitTemplateDocumentCompletedEventHandler(object sender, CommitTemplateDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CommitTemplateDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CommitTemplateDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void CommitCompositionCompletedEventHandler(object sender, CommitCompositionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CommitCompositionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CommitCompositionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void CommitContributionCompletedEventHandler(object sender, CommitContributionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CommitContributionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CommitContributionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void CompositionByObjectIdCompletedEventHandler(object sender, CompositionByObjectIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CompositionByObjectIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CompositionByObjectIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Composition Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Composition)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetCompositionCompletedEventHandler(object sender, GetCompositionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCompositionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCompositionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Composition Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Composition)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void FindCompositionsCompletedEventHandler(object sender, FindCompositionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindCompositionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindCompositionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResultsTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResultsTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetCompositionsCompletedEventHandler(object sender, GetCompositionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCompositionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCompositionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Composition[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Composition[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void QueryCompositionsCompletedEventHandler(object sender, QueryCompositionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryCompositionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryCompositionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Composition[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Composition[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void QueryCompletedEventHandler(object sender, QueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResultsTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResultsTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RunQueryCompletedEventHandler(object sender, RunQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RunQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RunQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetResultsCompletedEventHandler(object sender, GetResultsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetResultsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetResultsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResultsTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResultsTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void ReleaseResultsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetDirectoryCompletedEventHandler(object sender, GetDirectoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDirectoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDirectoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Folder Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Folder)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void CommitDirectoryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetEhrStatusCompletedEventHandler(object sender, GetEhrStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEhrStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEhrStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EhrStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EhrStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void CommitEhrStatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591